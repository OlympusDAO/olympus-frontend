# endpoint is given as a variable, so that queries to different endpoints are treated by react-query as unique

query ProtocolMetrics(
  $recordCount: Int!
  $startingRecord: Int = 0
  $filter: ProtocolMetric_filter
  $endpoint: String!
) {
  protocolMetrics(first: $recordCount, skip: $startingRecord, where: $filter, orderBy: date, orderDirection: desc) {
    id
    block
    currentAPY
    currentIndex
    date
    gOhmPrice
    gOhmTotalSupply
    nextDistributedOhm
    nextEpochRebase
    ohmPrice
    ohmTotalSupply
    sOhmCirculatingSupply
    timestamp
    totalValueLocked
  }
}

query TokenRecords($recordCount: Int!, $startingRecord: Int = 0, $filter: TokenRecord_filter, $endpoint: String!) {
  tokenRecords(first: $recordCount, skip: $startingRecord, where: $filter, orderBy: date, orderDirection: desc) {
    id
    balance
    block
    blockchain
    category
    date
    isBluechip
    isLiquid
    multiplier
    rate
    source
    sourceAddress
    timestamp
    token
    tokenAddress
    value
    valueExcludingOhm
  }
}

query TokenSupplies($recordCount: Int!, $startingRecord: Int = 0, $filter: TokenSupply_filter, $endpoint: String!) {
  tokenSupplies(first: $recordCount, skip: $startingRecord, where: $filter, orderBy: date, orderDirection: desc) {
    id
    balance
    block
    date
    pool
    poolAddress
    source
    sourceAddress
    supplyBalance
    timestamp
    token
    tokenAddress
    type
  }
}
