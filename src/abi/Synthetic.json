{
  "contractName": "SyntheticToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\",\"params\":{\"value\":\"amount of tokens to burn.\"}},\"constructor\":{\"params\":{\"tokenDecimals\":\"The number of decimals to define token precision.\",\"tokenName\":\"The name which describes the new token.\",\"tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isBurner(address)\":{\"params\":{\"account\":\"The address which is checked for the Burner role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Burner.\"}},\"isMinter(address)\":{\"params\":{\"account\":\"The address which is checked for the Minter role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Minter.\"}},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\",\"params\":{\"recipient\":\"address to mint to.\",\"value\":\"amount of tokens to mint.\"},\"returns\":{\"_0\":\"True if the mint succeeded, or False.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Burner role is removed.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"removeMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Minter role is removed.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Burnable and mintable ERC20.\"},\"userdoc\":{\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":\"Constructs the SyntheticToken.\",\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"isBurner(address)\":{\"notice\":\"Checks if a given account holds the Burner role.\"},\"isMinter(address)\":{\"notice\":\"Checks if a given account holds the Minter role.\"},\"removeBurner(address)\":{\"notice\":\"Removes Burner role from account.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"removeMinter(address)\":{\"notice\":\"Remove Minter role from account.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/guillem/Documents/Ethereum/Hedger/core/contracts/financial-templates/common/SyntheticToken.sol\":\"SyntheticToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x24cca39fcaab3e759d15b90a62aaf5c20343318593f598e9d652d3e9e57de191\",\"urls\":[\"bzz-raw://a236292c9c9a00f524c80f61f43e4b795e849531dcb0b5ef868d942e06ccc10c\",\"dweb:/ipfs/Qma9ssE3jQsgijsaSMrfxzzzKY9q79HyA9giqZ8gzjhY5F\"]},\"/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xfe828b4a29f9f4610081793374ace7d88d9cb3a3d6fe13fa28097a04de879406\",\"urls\":[\"bzz-raw://6eedeeeb92e1be8721def0edf794b05d5e279a03eb489da05050de765ca04397\",\"dweb:/ipfs/QmXkp7HvFbCkugbhnUDi1MNMNuvkuPPX4odUphgSGKUGAe\"]},\"/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xdde1eb1c04fb1733219a7946c04ba5e2a763dc7c5e64b71240c2deaab1e811d5\",\"urls\":[\"bzz-raw://e5997f5c5cfb0a76cdcce36e937971b32707d70e7f37bb8cf9722c3c98a3dc63\",\"dweb:/ipfs/QmXtGBrJDk87Rot81L2T1YFyEtivBHMiuaXrgZYnFAsciH\"]},\"/Users/guillem/Documents/Ethereum/Hedger/core/contracts/financial-templates/common/SyntheticToken.sol\":{\"keccak256\":\"0x750b0eb91030fc42c6bf1cd9029b163a2b156f9c7d193b42b8256f7fc169d196\",\"urls\":[\"bzz-raw://e7b1fde83d251cedcbaeaffd7b3d21ed9b0d47a8dcc6778e0acfe97b03180bda\",\"dweb:/ipfs/QmfUPMfcKd9iYtoNmyAERK5sR8GrEYTyi1robnVxcqD3tD\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200213338038062002133833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491849184918491620001c4916003919085019062000693565b508051620001da90600490602084019062000693565b50506005805460ff1916601217905550620001fe816001600160e01b036200029916565b62000215600080336001600160e01b03620002af16565b6200023b60015b604080516000808252602082019092526001600160e01b03620003ca16565b6200024760026200021c565b50506007805460ff19166001179055506200026a6001600160e01b03620004df16565b6200027d6001600160e01b036200053916565b620002906001600160e01b036200054516565b50505062000738565b6005805460ff191660ff92909216919091179055565b826000808281526006602052604090206001015460ff166002811115620002d257fe5b1462000325576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526006602052604090206001808201805460ff19168280021790555083815562000363600282018462000554602090811b620016db17901c565b60008481526006602052604081206001015460ff1660028111156200038457fe5b1415620003c35760405162461bcd60e51b815260040180806020018281038252603c8152602001806200209c603c913960400191505060405180910390fd5b5050505050565b826000808281526006602052604090206001015460ff166002811115620003ed57fe5b1462000440576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b600084815260066020908152604090912060018101805460ff19166002179055848155906200047f9060038301908590620016e56200056d821b17901c565b60008481526006602052604081206001015460ff166002811115620004a057fe5b1415620003c35760405162461bcd60e51b8152600401808060200182810382526038815260200180620020fb6038913960400191505060405180910390fd5b60075460ff1662000537576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b6007805460ff19169055565b6007805460ff19166001179055565b6200056982826001600160e01b03620005ae16565b5050565b60005b8151811015620005a957620005a0838383815181106200058c57fe5b60200260200101516200061260201b60201c565b60010162000570565b505050565b6001600160a01b038116620005f55760405162461bcd60e51b8152600401808060200182810382526023815260200180620020d86023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b0381166200066e576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006d657805160ff191683800117855562000706565b8280016001018555821562000706579182015b8281111562000706578251825591602001919060010190620006e9565b506200071492915062000718565b5090565b6200073591905b808211156200071457600081556001016200071f565b90565b61195480620007486000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e514610540578063d97c05be14610579578063dd62ed3e146105a5578063f44637ba146105d35761018e565b8063a9059cbb146104d1578063aa271e1a146104fd578063aaa14ca3146105235761018e565b806373cc802a146103f957806374d0a6761461041f5780637cdc1cb91461044b57806395d89b4114610477578063983b2d561461047f578063a457c2d7146104a55761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146103645780634334614a146103815780636be7658b146103a757806370a08231146103d35761018e565b8063313ce567146102ee578063395093511461030c57806340c10f19146103385761018e565b8063028468581461019357806306fdde03146101bb578063095ea7b31461023857806318160ddd1461027857806323b872dd146102925780633092afd5146102c8575b600080fd5b6101b9600480360360208110156101a957600080fd5b50356001600160a01b03166105f9565b005b6101c3610620565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102646004803603604081101561024e57600080fd5b506001600160a01b0381351690602001356106b6565b604080519115158252519081900360200190f35b6102806106d4565b60408051918252519081900360200190f35b610264600480360360608110156102a857600080fd5b506001600160a01b038135811691602081013590911690604001356106da565b6101b9600480360360208110156102de57600080fd5b50356001600160a01b0316610767565b6102f6610781565b6040805160ff9092168252519081900360200190f35b6102646004803603604081101561032257600080fd5b506001600160a01b03813516906020013561078a565b6102646004803603604081101561034e57600080fd5b506001600160a01b0381351690602001356107de565b6101b96004803603602081101561037a57600080fd5b5035610831565b6102646004803603602081101561039757600080fd5b50356001600160a01b0316610886565b6101b9600480360360408110156103bd57600080fd5b50803590602001356001600160a01b031661089c565b610280600480360360208110156103e957600080fd5b50356001600160a01b03166109b0565b6101b96004803603602081101561040f57600080fd5b50356001600160a01b03166109cb565b6101b96004803603604081101561043557600080fd5b50803590602001356001600160a01b03166109e6565b6102646004803603604081101561046157600080fd5b50803590602001356001600160a01b0316610afa565b6101c3610ba9565b6101b96004803603602081101561049557600080fd5b50356001600160a01b0316610c0a565b610264600480360360408110156104bb57600080fd5b506001600160a01b038135169060200135610c26565b610264600480360360408110156104e757600080fd5b506001600160a01b038135169060200135610c94565b6102646004803603602081101561051357600080fd5b50356001600160a01b0316610ca8565b6101b96004803603602081101561053957600080fd5b5035610cbc565b61055d6004803603602081101561055657600080fd5b5035610db6565b604080516001600160a01b039092168252519081900360200190f35b6101b96004803603604081101561058f57600080fd5b50803590602001356001600160a01b0316610e38565b610280600480360360408110156105bb57600080fd5b506001600160a01b0381358116916020013516610f4c565b6101b9600480360360208110156105e957600080fd5b50356001600160a01b0316610f77565b610601610f91565b610609610fea565b61061560025b8261089c565b61061d610ff6565b50565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ac5780601f10610681576101008083540402835291602001916106ac565b820191906000526020600020905b81548152906001019060200180831161068f57829003601f168201915b5050505050905090565b60006106ca6106c3611005565b8484611009565b5060015b92915050565b60025490565b60006106e78484846110f5565b61075d846106f3611005565b61075885604051806060016040528060288152602001611821602891396001600160a01b038a16600090815260016020526040812090610731611005565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61125c16565b611009565b5060019392505050565b61076f610f91565b610777610fea565b610615600161060f565b60055460ff1690565b60006106ca610797611005565b8461075885600160006107a8611005565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6112f316565b600060016107ec8133610afa565b6108275760405162461bcd60e51b81526004018080602001828103825260228152602001806117ff6022913960400191505060405180910390fd5b61075d848461134d565b600261083d8133610afa565b6108785760405162461bcd60e51b81526004018080602001828103825260228152602001806117ff6022913960400191505060405180910390fd5b6108823383611449565b5050565b6000610890610f91565b6106ce60025b83610afa565b81600260008281526006602052604090206001015460ff1660028111156108bf57fe5b146108fb5760405162461bcd60e51b815260040180806020018281038252602c8152602001806117d3602c913960400191505060405180910390fd5b60008381526006602052604090205483906109169033610afa565b6109515760405162461bcd60e51b81526004018080602001828103825260248152602001806118d66024913960400191505060405180910390fd5b6000848152600660205260409020610972906003018463ffffffff61155116565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6001600160a01b031660009081526020819052604090205490565b6109d3610f91565b6109db610fea565b610615600082610e38565b81600260008281526006602052604090206001015460ff166002811115610a0957fe5b14610a455760405162461bcd60e51b815260040180806020018281038252602c8152602001806117d3602c913960400191505060405180910390fd5b6000838152600660205260409020548390610a609033610afa565b610a9b5760405162461bcd60e51b81526004018080602001828103825260248152602001806118d66024913960400191505060405180910390fd5b6000848152600660205260409020610abc906003018463ffffffff61157316565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260066020526040812060018082015460ff166002811115610b1c57fe5b1415610b3d57610b35600282018463ffffffff6115f316565b9150506106ce565b6002600182015460ff166002811115610b5257fe5b1415610b6b57610b35600382018463ffffffff61160616565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ac5780601f10610681576101008083540402835291602001916106ac565b610c12610f91565b610c1a610fea565b61061560015b826109e6565b60006106ca610c33611005565b84610758856040518060600160405280602581526020016118fa6025913960016000610c5d611005565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61125c16565b60006106ca610ca1611005565b84846110f5565b6000610cb2610f91565b6106ce6001610896565b80600260008281526006602052604090206001015460ff166002811115610cdf57fe5b14610d1b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806117d3602c913960400191505060405180910390fd5b81610d268133610afa565b610d615760405162461bcd60e51b81526004018080602001828103825260228152602001806117ff6022913960400191505060405180910390fd5b6000838152600660205260409020610d82906003013363ffffffff61155116565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526006602052604090206001015460ff166002811115610ddb57fe5b14610e175760405162461bcd60e51b815260040180806020018281038252602f8152602001806117a4602f913960400191505060405180910390fd5b6000838152600660205260409020610e3190600201611625565b9392505050565b81600160008281526006602052604090206001015460ff166002811115610e5b57fe5b14610e975760405162461bcd60e51b815260040180806020018281038252602f8152602001806117a4602f913960400191505060405180910390fd5b6000838152600660205260409020548390610eb29033610afa565b610eed5760405162461bcd60e51b81526004018080602001828103825260248152602001806118d66024913960400191505060405180910390fd5b6000848152600660205260409020610f0e906002018463ffffffff61163216565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610f7f610f91565b610f87610fea565b6106156002610c20565b60075460ff16610fe8576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b6007805460ff19169055565b6007805460ff19166001179055565b3390565b6001600160a01b03831661104e5760405162461bcd60e51b81526004018080602001828103825260248152602001806118b26024913960400191505060405180910390fd5b6001600160a01b0382166110935760405162461bcd60e51b815260040180806020018281038252602281526020018061175c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661113a5760405162461bcd60e51b815260040180806020018281038252602581526020018061188d6025913960400191505060405180910390fd5b6001600160a01b03821661117f5760405162461bcd60e51b81526004018080602001828103825260238152602001806117176023913960400191505060405180910390fd5b61118a838383611694565b6111cd8160405180606001604052806026815260200161177e602691396001600160a01b038616600090815260208190526040902054919063ffffffff61125c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611202908263ffffffff6112f316565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156112eb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112b0578181015183820152602001611298565b50505050905090810190601f1680156112dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610e31576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166113a8576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6113b460008383611694565b6002546113c7908263ffffffff6112f316565b6002556001600160a01b0382166000908152602081905260409020546113f3908263ffffffff6112f316565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821661148e5760405162461bcd60e51b81526004018080602001828103825260218152602001806118496021913960400191505060405180910390fd5b61149a82600083611694565b6114dd8160405180606001604052806022815260200161173a602291396001600160a01b038516600090815260208190526040902054919063ffffffff61125c16565b6001600160a01b038316600090815260208190526040902055600254611509908263ffffffff61169916565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166115ce576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b6001600160a01b0381166116775760405162461bcd60e51b815260040180806020018281038252602381526020018061186a6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b505050565b6000610e3183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061125c565b6108828282611632565b60005b81518110156116945761170e8383838151811061170157fe5b6020026020010151611573565b6001016116e856fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d345218d319ee88ce3b8d4af73e96e273dc3dcf6e6f53b224ed6906a623bfcdc64736f6c63430006060033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520612073686172656420726f6c65",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e514610540578063d97c05be14610579578063dd62ed3e146105a5578063f44637ba146105d35761018e565b8063a9059cbb146104d1578063aa271e1a146104fd578063aaa14ca3146105235761018e565b806373cc802a146103f957806374d0a6761461041f5780637cdc1cb91461044b57806395d89b4114610477578063983b2d561461047f578063a457c2d7146104a55761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146103645780634334614a146103815780636be7658b146103a757806370a08231146103d35761018e565b8063313ce567146102ee578063395093511461030c57806340c10f19146103385761018e565b8063028468581461019357806306fdde03146101bb578063095ea7b31461023857806318160ddd1461027857806323b872dd146102925780633092afd5146102c8575b600080fd5b6101b9600480360360208110156101a957600080fd5b50356001600160a01b03166105f9565b005b6101c3610620565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102646004803603604081101561024e57600080fd5b506001600160a01b0381351690602001356106b6565b604080519115158252519081900360200190f35b6102806106d4565b60408051918252519081900360200190f35b610264600480360360608110156102a857600080fd5b506001600160a01b038135811691602081013590911690604001356106da565b6101b9600480360360208110156102de57600080fd5b50356001600160a01b0316610767565b6102f6610781565b6040805160ff9092168252519081900360200190f35b6102646004803603604081101561032257600080fd5b506001600160a01b03813516906020013561078a565b6102646004803603604081101561034e57600080fd5b506001600160a01b0381351690602001356107de565b6101b96004803603602081101561037a57600080fd5b5035610831565b6102646004803603602081101561039757600080fd5b50356001600160a01b0316610886565b6101b9600480360360408110156103bd57600080fd5b50803590602001356001600160a01b031661089c565b610280600480360360208110156103e957600080fd5b50356001600160a01b03166109b0565b6101b96004803603602081101561040f57600080fd5b50356001600160a01b03166109cb565b6101b96004803603604081101561043557600080fd5b50803590602001356001600160a01b03166109e6565b6102646004803603604081101561046157600080fd5b50803590602001356001600160a01b0316610afa565b6101c3610ba9565b6101b96004803603602081101561049557600080fd5b50356001600160a01b0316610c0a565b610264600480360360408110156104bb57600080fd5b506001600160a01b038135169060200135610c26565b610264600480360360408110156104e757600080fd5b506001600160a01b038135169060200135610c94565b6102646004803603602081101561051357600080fd5b50356001600160a01b0316610ca8565b6101b96004803603602081101561053957600080fd5b5035610cbc565b61055d6004803603602081101561055657600080fd5b5035610db6565b604080516001600160a01b039092168252519081900360200190f35b6101b96004803603604081101561058f57600080fd5b50803590602001356001600160a01b0316610e38565b610280600480360360408110156105bb57600080fd5b506001600160a01b0381358116916020013516610f4c565b6101b9600480360360208110156105e957600080fd5b50356001600160a01b0316610f77565b610601610f91565b610609610fea565b61061560025b8261089c565b61061d610ff6565b50565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ac5780601f10610681576101008083540402835291602001916106ac565b820191906000526020600020905b81548152906001019060200180831161068f57829003601f168201915b5050505050905090565b60006106ca6106c3611005565b8484611009565b5060015b92915050565b60025490565b60006106e78484846110f5565b61075d846106f3611005565b61075885604051806060016040528060288152602001611821602891396001600160a01b038a16600090815260016020526040812090610731611005565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61125c16565b611009565b5060019392505050565b61076f610f91565b610777610fea565b610615600161060f565b60055460ff1690565b60006106ca610797611005565b8461075885600160006107a8611005565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6112f316565b600060016107ec8133610afa565b6108275760405162461bcd60e51b81526004018080602001828103825260228152602001806117ff6022913960400191505060405180910390fd5b61075d848461134d565b600261083d8133610afa565b6108785760405162461bcd60e51b81526004018080602001828103825260228152602001806117ff6022913960400191505060405180910390fd5b6108823383611449565b5050565b6000610890610f91565b6106ce60025b83610afa565b81600260008281526006602052604090206001015460ff1660028111156108bf57fe5b146108fb5760405162461bcd60e51b815260040180806020018281038252602c8152602001806117d3602c913960400191505060405180910390fd5b60008381526006602052604090205483906109169033610afa565b6109515760405162461bcd60e51b81526004018080602001828103825260248152602001806118d66024913960400191505060405180910390fd5b6000848152600660205260409020610972906003018463ffffffff61155116565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6001600160a01b031660009081526020819052604090205490565b6109d3610f91565b6109db610fea565b610615600082610e38565b81600260008281526006602052604090206001015460ff166002811115610a0957fe5b14610a455760405162461bcd60e51b815260040180806020018281038252602c8152602001806117d3602c913960400191505060405180910390fd5b6000838152600660205260409020548390610a609033610afa565b610a9b5760405162461bcd60e51b81526004018080602001828103825260248152602001806118d66024913960400191505060405180910390fd5b6000848152600660205260409020610abc906003018463ffffffff61157316565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260066020526040812060018082015460ff166002811115610b1c57fe5b1415610b3d57610b35600282018463ffffffff6115f316565b9150506106ce565b6002600182015460ff166002811115610b5257fe5b1415610b6b57610b35600382018463ffffffff61160616565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ac5780601f10610681576101008083540402835291602001916106ac565b610c12610f91565b610c1a610fea565b61061560015b826109e6565b60006106ca610c33611005565b84610758856040518060600160405280602581526020016118fa6025913960016000610c5d611005565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61125c16565b60006106ca610ca1611005565b84846110f5565b6000610cb2610f91565b6106ce6001610896565b80600260008281526006602052604090206001015460ff166002811115610cdf57fe5b14610d1b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806117d3602c913960400191505060405180910390fd5b81610d268133610afa565b610d615760405162461bcd60e51b81526004018080602001828103825260228152602001806117ff6022913960400191505060405180910390fd5b6000838152600660205260409020610d82906003013363ffffffff61155116565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526006602052604090206001015460ff166002811115610ddb57fe5b14610e175760405162461bcd60e51b815260040180806020018281038252602f8152602001806117a4602f913960400191505060405180910390fd5b6000838152600660205260409020610e3190600201611625565b9392505050565b81600160008281526006602052604090206001015460ff166002811115610e5b57fe5b14610e975760405162461bcd60e51b815260040180806020018281038252602f8152602001806117a4602f913960400191505060405180910390fd5b6000838152600660205260409020548390610eb29033610afa565b610eed5760405162461bcd60e51b81526004018080602001828103825260248152602001806118d66024913960400191505060405180910390fd5b6000848152600660205260409020610f0e906002018463ffffffff61163216565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610f7f610f91565b610f87610fea565b6106156002610c20565b60075460ff16610fe8576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b6007805460ff19169055565b6007805460ff19166001179055565b3390565b6001600160a01b03831661104e5760405162461bcd60e51b81526004018080602001828103825260248152602001806118b26024913960400191505060405180910390fd5b6001600160a01b0382166110935760405162461bcd60e51b815260040180806020018281038252602281526020018061175c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661113a5760405162461bcd60e51b815260040180806020018281038252602581526020018061188d6025913960400191505060405180910390fd5b6001600160a01b03821661117f5760405162461bcd60e51b81526004018080602001828103825260238152602001806117176023913960400191505060405180910390fd5b61118a838383611694565b6111cd8160405180606001604052806026815260200161177e602691396001600160a01b038616600090815260208190526040902054919063ffffffff61125c16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611202908263ffffffff6112f316565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156112eb5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112b0578181015183820152602001611298565b50505050905090810190601f1680156112dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610e31576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166113a8576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6113b460008383611694565b6002546113c7908263ffffffff6112f316565b6002556001600160a01b0382166000908152602081905260409020546113f3908263ffffffff6112f316565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821661148e5760405162461bcd60e51b81526004018080602001828103825260218152602001806118496021913960400191505060405180910390fd5b61149a82600083611694565b6114dd8160405180606001604052806022815260200161173a602291396001600160a01b038516600090815260208190526040902054919063ffffffff61125c16565b6001600160a01b038316600090815260208190526040902055600254611509908263ffffffff61169916565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166115ce576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b6001600160a01b0381166116775760405162461bcd60e51b815260040180806020018281038252602381526020018061186a6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b505050565b6000610e3183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061125c565b6108828282611632565b60005b81518110156116945761170e8383838151811061170157fe5b6020026020010151611573565b6001016116e856fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220d345218d319ee88ce3b8d4af73e96e273dc3dcf6e6f53b224ed6906a623bfcdc64736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "292:2795:21:-:0;;;635:192;5:9:-1;2:2;;;27:1;24;17:12;2:2;635:192:21;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;635:192:21;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;635:192:21;;420:4:-1;411:14;;;;635:192:21;;;;;411:14:-1;635:192:21;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;635:192:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;635:192:21;;420:4:-1;411:14;;;;635:192:21;;;;;411:14:-1;635:192:21;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;635:192:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;635:192:21;;;;;;;2046:12:63;;635:192:21;;-1:-1:-1;771:9:21;;-1:-1:-1;782:11:21;;635:192;;771:9;;782:11;;2046:12:63;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2068:16:63;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2094:9:63;:14;;-1:-1:-1;;2094:14:63;2106:2;2094:14;;;-1:-1:-1;1047:30:2::1;1062:14:::0;1047::::1;:30::i;:::-;1087:76;1116:11;::::0;1152:10:::1;1087:20;:76::i;:::-;1173:80;1199:12;1191:21;1236:16;::::0;;1222:11:::1;1236:16:::0;;;::::1;::::0;::::1;::::0;;;1173:17:::1;:80::i;:::-;1263;1289:12;1281:21;::::0;1263:80:::1;-1:-1:-1::0;;864:11:4;:18;;-1:-1:-1;;864:18:4;878:4;864:18;;;-1:-1:-1;1298:19:4::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1365:20;:18;:20::i;:::-;635:192:21::0;;;292:2795;;9983:88:63;10043:9;:21;;-1:-1:-1;;10043:21:63;;;;;;;;;;;;9983:88::o;8777:519:5:-;8925:6;7520:16;7494:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;7486:85;;;;;-1:-1:-1;;;7486:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8943:17:::1;8963:13:::0;;;:5:::1;:13;::::0;;;;9002:18:::1;8986:13:::0;;::::1;:34:::0;;-1:-1:-1;;8986:34:5::1;9002:18:::0;;8986:34:::1;;::::0;;-1:-1:-1;9030:34:5;;;9074:48:::1;:28;::::0;::::1;9108:13:::0;9074:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9187:16;9153:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;9132:157;;;;-1:-1:-1::0;;;9132:157:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:1;8777:519:::0;;;;:::o;7923:517::-;8078:6;7520:16;7494:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;7486:85;;;;;-1:-1:-1;;;7486:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8096:17:::1;8116:13:::0;;;:5:::1;:13;::::0;;;;;;;8139::::1;::::0;::::1;:31:::0;;-1:-1:-1;;8139:31:5::1;8155:15;8139:31;::::0;;8180:34;;;8116:13;8224:46:::1;::::0;:25:::1;::::0;::::1;::::0;8255:14;;8224:30:::1;;::::0;::::1;;:46:::0;::::1;:::i;:::-;8335:16;8301:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;8280:153;;;;-1:-1:-1::0;;;8280:153:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186:4::0;2249:11;;;;2241:55;;;;;-1:-1:-1;;;2241:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186::o;2309:136::-;2419:11;:19;;-1:-1:-1;;2419:19:4;;;2309:136::o;2451:206::-;2632:11;:18;;-1:-1:-1;;2632:18:4;2646:4;2632:18;;;2451:206::o;654:144:5:-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o;1474:232::-;1584:9;1579:121;1603:14;:21;1599:1;:25;1579:121;;;1645:44;1655:14;1671;1686:1;1671:17;;;;;;;;;;;;;;1645:9;;;:44;;:::i;:::-;1626:3;;1579:121;;;;1474:232;;:::o;286:221::-;-1:-1:-1;;;;;392:25:5;;384:73;;;;-1:-1:-1;;;384:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;;;;;;467:33:5;-1:-1:-1;;;;;467:33:5;;;;;;;286:221::o;1077:228::-;-1:-1:-1;;;;;1183:27:5;;1175:71;;;;;-1:-1:-1;;;1175:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1256:35:5;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1256:42:5;-1:-1:-1;1256:42:5;;;1077:228::o;292:2795:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;292:2795:21;;;-1:-1:-1;292:2795:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "292:2795:21:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;292:2795:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1938:124:21;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1938:124:21;-1:-1:-1;;;;;1938:124:21;;:::i;:::-;;2180:81:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2180:81:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4216:166:63;;-1:-1:-1;;;;;4216:166:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3223:98;;;:::i;:::-;;;;;;;;;;;;;;;;4842:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4842:317:63;;;;;;;;;;;;;;;;;:::i;1320:124:21:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1320:124:21;-1:-1:-1;;;;;1320:124:21;;:::i;3082:81:63:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5554:215;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5554:215:63;;-1:-1:-1;;;;;5554:215:63;;;;;;:::i;1591:216:2:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1591:216:2;;-1:-1:-1;;;;;1591:216:2;;;;;;:::i;1931:126::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1931:126:2;;:::i;2939:146:21:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2939:146:21;-1:-1:-1;;;;;2939:146:21;;:::i;6365:262:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6365:262:5;;;;;;-1:-1:-1;;;;;6365:262:5;;:::i;3379:117:63:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3379:117:63;-1:-1:-1;;;;;3379:117:63;;:::i;2233:120:21:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2233:120:21;-1:-1:-1;;;;;2233:120:21;;:::i;5751:239:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5751:239:5;;;;;;-1:-1:-1;;;;;5751:239:5;;:::i;3906:428::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3906:428:5;;;;;;-1:-1:-1;;;;;3906:428:5;;:::i;2374:85:63:-;;;:::i;1010:118:21:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1010:118:21;-1:-1:-1;;;;;1010:118:21;;:::i;6256:266:63:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6256:266:63;;-1:-1:-1;;;;;6256:266:63;;;;;;:::i;3699:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3699:172:63;;-1:-1:-1;;;;;3699:172:63;;;;;;:::i;2573:146:21:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2573:146:21;-1:-1:-1;;;;;2573:146:21;;:::i;6894:235:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6894:235:5;;:::i;5245:160::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5245:160:5;;:::i;:::-;;;;-1:-1:-1;;;;;5245:160:5;;;;;;;;;;;;;;4692:252;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4692:252:5;;;;;;-1:-1:-1;;;;;4692:252:5;;:::i;3929:149:63:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3929:149:63;;;;;;;;;;:::i;1627:118:21:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1627:118:21;-1:-1:-1;;;;;1627:118:21;;:::i;1938:124::-;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;2011:44:21::1;2032:12;2024:21;2047:7;2011:12;:44::i;:::-;1365:20:4::0;:18;:20::i;:::-;1938:124:21;:::o;2180:81:63:-;2249:5;2242:12;;;;;;;;;;;;;-1:-1:-1;;2242:12:63;;;;;;;;;;;;;;;;;;;;;;;;;;2217:13;;2242:12;;2249:5;;2242:12;;;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;:::o;4216:166::-;4299:4;4315:39;4324:12;:10;:12::i;:::-;4338:7;4347:6;4315:8;:39::i;:::-;-1:-1:-1;4371:4:63;4216:166;;;;;:::o;3223:98::-;3302:12;;3223:98;:::o;4842:317::-;4948:4;4964:36;4974:6;4982:9;4993:6;4964:9;:36::i;:::-;5010:121;5019:6;5027:12;:10;:12::i;:::-;5041:89;5079:6;5041:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5041:19:63;;;;;;-1:-1:-1;5041:19:63;;;;;;5061:12;:10;:12::i;:::-;-1:-1:-1;;;;;5041:33:63;;;;;;;;;;;;-1:-1:-1;5041:33:63;;;;:37;:89::i;:::-;5010:8;:121::i;:::-;-1:-1:-1;5148:4:63;4842:317;;;;;:::o;1320:124:21:-;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1393:44:21::1;1414:12;1406:21;::::0;3082:81:63;3147:9;;;;3082:81;:::o;5554:215::-;5642:4;5658:83;5667:12;:10;:12::i;:::-;5681:7;5690:50;5729:10;5690:11;:25;5702:12;:10;:12::i;:::-;-1:-1:-1;;;;;5690:25:63;;;;;;;;;;;;;;;;;-1:-1:-1;5690:25:63;;;:34;;;;;;;;;;;:38;:50::i;1591:216:2:-;1736:4;1704:12;2674:29:5;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;-1:-1:-1;;;2666:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:23:2::1;1762:9;1773:5;1756;:23::i;1931:126::-:0;2001:12;2674:29:5;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;-1:-1:-1;;;2666:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:24:2::1;2032:10;2044:5;2026;:24::i;:::-;1931:126:::0;;:::o;2939:146:21:-;3014:4;1584:19:4;:17;:19::i;:::-;3037:41:21::1;3055:12;3047:21;3070:7;3037:9;:41::i;6365:262:5:-:0;6445:6;3512:15;3486:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;-1:-1:-1;;;3478:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;6469:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;-1:-1:-1::0;;;2932:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6487:13:::2;::::0;;;:5:::2;:13;::::0;;;;:63:::2;::::0;:34:::2;;6535:14:::0;6487:63:::2;:47;:63;:::i;:::-;6565:55;::::0;6609:10:::2;::::0;-1:-1:-1;;;;;6565:55:5;::::2;::::0;6585:6;;6565:55:::2;::::0;;;::::2;3586:1:::1;6365:262:::0;;;:::o;3379:117:63:-;-1:-1:-1;;;;;3471:18:63;3445:7;3471:18;;;;;;;;;;;;3379:117::o;2233:120:21:-;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;2304:42:21::1;2324:11;2338:7;2304:11;:42::i;5751:239:5:-:0;5823:6;3512:15;3486:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;-1:-1:-1;;;3478:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;5847:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;-1:-1:-1::0;;;2932:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5865:13:::2;::::0;;;:5:::2;:13;::::0;;;;:55:::2;::::0;:34:::2;;5910:9:::0;5865:55:::2;:44;:55;:::i;:::-;5935:48;::::0;5972:10:::2;::::0;-1:-1:-1;;;;;5935:48:5;::::2;::::0;5953:6;;5935:48:::2;::::0;;;::::2;3586:1:::1;5751:239:::0;;;:::o;3906:428::-;3985:4;4021:13;;;:5;:13;;;;;4065:18;4048:13;;;;;;:35;;;;;;;;;4044:250;;;4106:52;:28;;;4144:13;4106:52;:37;:52;:::i;:::-;4099:59;;;;;4044:250;4196:15;4179:13;;;;;;:32;;;;;;;;;4175:119;;;4234:49;:25;;;4269:13;4234:49;:34;:49;:::i;4175:119::-;4303:24;;;-1:-1:-1;;;4303:24:5;;;;;;;;;;;;-1:-1:-1;;;4303:24:5;;;;;;;;;;;;;;2374:85:63;2445:7;2438:14;;;;;;;;;;;;;-1:-1:-1;;2438:14:63;;;;;;;;;;;;;;;;;;;;;;;;;;2413:13;;2438:14;;2445:7;;2438:14;;;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;1010:118:21;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1080:41:21::1;1098:12;1090:21;1113:7;1080:9;:41::i;6256:266:63:-:0;6349:4;6365:129;6374:12;:10;:12::i;:::-;6388:7;6397:96;6436:15;6397:96;;;;;;;;;;;;;;;;;:11;:25;6409:12;:10;:12::i;:::-;-1:-1:-1;;;;;6397:25:63;;;;;;;;;;;;;;;;;-1:-1:-1;6397:25:63;;;:34;;;;;;;;;;;;:38;:96::i;3699:172::-;3785:4;3801:42;3811:12;:10;:12::i;:::-;3825:9;3836:6;3801:9;:42::i;2573:146:21:-;2648:4;1584:19:4;:17;:19::i;:::-;2671:41:21::1;2689:12;2681:21;::::0;6894:235:5;6956:6;3512:15;3486:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;-1:-1:-1;;;3478:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6979:6:::1;2674:29;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;-1:-1:-1::0;;;2666:76:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:13:::2;::::0;;;:5:::2;:13;::::0;;;;:59:::2;::::0;:34:::2;;7045:10;6997:59;:47;:59;:::i;:::-;7071:51;::::0;7111:10:::2;::::0;;;7091:6;;7071:51:::2;::::0;;;::::2;3586:1:::1;6894:235:::0;;:::o;5245:160::-;5323:7;5306:6;3239:18;3213:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;-1:-1:-1;;;3205:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:13:::1;::::0;;;:5:::1;:13;::::0;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;5342:56:::0;5245:160;-1:-1:-1;;;5245:160:5:o;4692:252::-;4769:6;3239:18;3213:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;-1:-1:-1;;;3205:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4793:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;-1:-1:-1::0;;;2932:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:13:::2;::::0;;;:5:::2;:13;::::0;;;;:60:::2;::::0;:37:::2;;4861:9:::0;4811:60:::2;:49;:60;:::i;:::-;4886:51;::::0;4926:10:::2;::::0;-1:-1:-1;;;;;4886:51:5;::::2;::::0;4907:6;;4886:51:::2;::::0;;;::::2;3319:1:::1;4692:252:::0;;;:::o;3929:149:63:-;-1:-1:-1;;;;;4044:18:63;;;4018:7;4044:18;;;-1:-1:-1;4044:18:63;;;;;;;;:27;;;;;;;;;;;;;3929:149::o;1627:118:21:-;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1697:41:21::1;1715:12;1707:21;::::0;2117:186:4;2249:11;;;;2241:55;;;;;-1:-1:-1;;;2241:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:186::o;2309:136::-;2419:11;:19;;-1:-1:-1;;2419:19:4;;;2309:136::o;2451:206::-;2632:11;:18;;-1:-1:-1;;2632:18:4;2646:4;2632:18;;;2451:206::o;735:104:59:-;822:10;735:104;:::o;9320:340:63:-;-1:-1:-1;;;;;9421:19:63;;9413:68;;;;-1:-1:-1;;;9413:68:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9499:21:63;;9491:68;;;;-1:-1:-1;;;9491:68:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9570:18:63;;;;;;;-1:-1:-1;9570:18:63;;;;;;;;:27;;;;;;;;;;;;;:36;;;9621:32;;;;;;;;;;;;;;;;;9320:340;;;:::o;6996:530::-;-1:-1:-1;;;;;7101:20:63;;7093:70;;;;-1:-1:-1;;;7093:70:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7181:23:63;;7173:71;;;;-1:-1:-1;;;7173:71:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7255:47;7276:6;7284:9;7295:6;7255:20;:47::i;:::-;7333:71;7355:6;7333:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7333:17:63;;:9;:17;;;;;;;;;;;;;:21;:71::i;:::-;-1:-1:-1;;;;;7313:17:63;;;:9;:17;;;;;;;;;;;:91;;;;7437:20;;;;;;;:32;;7462:6;7437:24;:32::i;:::-;-1:-1:-1;;;;;7414:20:63;;;:9;:20;;;;;;;;;;;;:55;;;;7484:35;;;;;;;7414:20;;7484:35;;;;;;;;;;;;;6996:530;;;:::o;1692:187:62:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:62;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:62;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:370:63;-1:-1:-1;;;;;7879:21:63;;7871:65;;;;;-1:-1:-1;;;7871:65:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;7947:49;7976:1;7980:7;7989:6;7947:20;:49::i;:::-;8022:12;;:24;;8039:6;8022:24;:16;:24;:::i;:::-;8007:12;:39;-1:-1:-1;;;;;8077:18:63;;:9;:18;;;;;;;;;;;:30;;8100:6;8077:22;:30::i;:::-;-1:-1:-1;;;;;8056:18:63;;:9;:18;;;;;;;;;;;:51;;;;8122:37;;;;;;;8056:18;;:9;;8122:37;;;;;;;;;;7796:370;;:::o;8485:410::-;-1:-1:-1;;;;;8568:21:63;;8560:67;;;;-1:-1:-1;;;8560:67:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8638:49;8659:7;8676:1;8680:6;8638:20;:49::i;:::-;8719:68;8742:6;8719:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8719:18:63;;:9;:18;;;;;;;;;;;;;:22;:68::i;:::-;-1:-1:-1;;;;;8698:18:63;;:9;:18;;;;;;;;;;:89;8812:12;;:24;;8829:6;8812:16;:24::i;:::-;8797:12;:39;8851:37;;;;;;;;8877:1;;-1:-1:-1;;;;;8851:37:63;;;;;;;;;;;;8485:410;;:::o;1311:157:5:-;-1:-1:-1;;;;;1415:38:5;1456:5;1415:38;;;;;;;;;;;:46;;-1:-1:-1;;1415:46:5;;;1311:157::o;1077:228::-;-1:-1:-1;;;;;1183:27:5;;1175:71;;;;;-1:-1:-1;;;1175:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1256:35:5;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1256:42:5;-1:-1:-1;1256:42:5;;;1077:228::o;109:171::-;235:21;;-1:-1:-1;;;;;235:21:5;;;:38;;;;109:171::o;901:170::-;-1:-1:-1;;;;;1027:37:5;1004:4;1027:37;;;;;;;;;;;;;;;901:170::o;513:135::-;620:21;-1:-1:-1;;;;;620:21:5;;513:135::o;286:221::-;-1:-1:-1;;;;;392:25:5;;384:73;;;;-1:-1:-1;;;384:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;;;;;;467:33:5;-1:-1:-1;;;;;467:33:5;;;;;;;286:221::o;10658:92:63:-;;;;:::o;1274:134:62:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;654:144:5:-;749:42;761:14;777:13;749:11;:42::i;1474:232::-;1584:9;1579:121;1603:14;:21;1599:1;:25;1579:121;;;1645:44;1655:14;1671;1686:1;1671:17;;;;;;;;;;;;;;1645:9;:44::i;:::-;1626:3;;1579:121;",
  "source": "pragma solidity ^0.6.0;\nimport \"../../common/implementation/ExpandedERC20.sol\";\nimport \"../../common/implementation/Lockable.sol\";\n\n\n/**\n * @title Burnable and mintable ERC20.\n * @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\n */\n\ncontract SyntheticToken is ExpandedERC20, Lockable {\n    /**\n     * @notice Constructs the SyntheticToken.\n     * @param tokenName The name which describes the new token.\n     * @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n     * @param tokenDecimals The number of decimals to define token precision.\n     */\n    constructor(\n        string memory tokenName,\n        string memory tokenSymbol,\n        uint8 tokenDecimals\n    ) public ExpandedERC20(tokenName, tokenSymbol, tokenDecimals) nonReentrant() {}\n\n    /**\n     * @notice Add Minter role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Minter role is added.\n     */\n    function addMinter(address account) external nonReentrant() {\n        addMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Remove Minter role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Minter role is removed.\n     */\n    function removeMinter(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Add Burner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Burner role is added.\n     */\n    function addBurner(address account) external nonReentrant() {\n        addMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Removes Burner role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Burner role is removed.\n     */\n    function removeBurner(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Reset Owner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The new holder of the Owner role.\n     */\n    function resetOwner(address account) external nonReentrant() {\n        resetMember(uint256(Roles.Owner), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Minter role.\n     * @param account The address which is checked for the Minter role.\n     * @return bool True if the provided account is a Minter.\n     */\n    function isMinter(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Burner role.\n     * @param account The address which is checked for the Burner role.\n     * @return bool True if the provided account is a Burner.\n     */\n    function isBurner(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Burner), account);\n    }\n}\n",
  "sourcePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/financial-templates/common/SyntheticToken.sol",
  "ast": {
    "absolutePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/financial-templates/common/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [3844]
    },
    "id": 3845,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3688,
        "literals": ["solidity", "^", "0.6", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:21"
      },
      {
        "absolutePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 3689,
        "nodeType": "ImportDirective",
        "scope": 3845,
        "sourceUnit": 402,
        "src": "24:55:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 3690,
        "nodeType": "ImportDirective",
        "scope": 3845,
        "sourceUnit": 1165,
        "src": "80:50:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3692,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 401,
              "src": "319:13:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$401",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 3693,
            "nodeType": "InheritanceSpecifier",
            "src": "319:13:21"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3694,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1164,
              "src": "334:8:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$1164",
                "typeString": "contract Lockable"
              }
            },
            "id": 3695,
            "nodeType": "InheritanceSpecifier",
            "src": "334:8:21"
          }
        ],
        "contractDependencies": [401, 1164, 1772, 2035, 13688, 14573, 14984],
        "contractKind": "contract",
        "documentation": {
          "id": 3691,
          "nodeType": "StructuredDocumentation",
          "src": "133:157:21",
          "text": "@title Burnable and mintable ERC20.\n@dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 3844,
        "linearizedBaseContracts": [3844, 1164, 401, 1772, 14573, 2035, 14984, 13688],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3712,
              "nodeType": "Block",
              "src": "825:2:21",
              "statements": []
            },
            "documentation": {
              "id": 3696,
              "nodeType": "StructuredDocumentation",
              "src": "349:281:21",
              "text": "@notice Constructs the SyntheticToken.\n@param tokenName The name which describes the new token.\n@param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n@param tokenDecimals The number of decimals to define token precision."
            },
            "id": 3713,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3705,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3698,
                    "src": "771:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3706,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3700,
                    "src": "782:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3707,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3702,
                    "src": "795:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3708,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3704,
                  "name": "ExpandedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 401,
                  "src": "757:13:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$401_$",
                    "typeString": "type(contract ExpandedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "757:52:21"
              },
              {
                "arguments": [],
                "id": 3710,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3709,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "810:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:14:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3713,
                  "src": "656:23:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3700,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3713,
                  "src": "689:25:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3699,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3702,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3713,
                  "src": "724:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3701,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "646:103:21"
            },
            "returnParameters": {
              "id": 3711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:0:21"
            },
            "scope": 3844,
            "src": "635:192:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3730,
              "nodeType": "Block",
              "src": "1070:58:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3724,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1098:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1090:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3722,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1090:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3727,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "1113:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3721,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "1080:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:41:21"
                }
              ]
            },
            "documentation": {
              "id": 3714,
              "nodeType": "StructuredDocumentation",
              "src": "833:172:21",
              "text": "@notice Add Minter role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 3731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3719,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3718,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1055:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:21"
              }
            ],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3716,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3731,
                  "src": "1029:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1028:17:21"
            },
            "returnParameters": {
              "id": 3720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:0:21"
            },
            "scope": 3844,
            "src": "1010:118:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3748,
              "nodeType": "Block",
              "src": "1383:61:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3742,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1414:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1414:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1406:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3740,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1406:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3745,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3734,
                        "src": "1429:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3739,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1600,
                      "src": "1393:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3747,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:44:21"
                }
              ]
            },
            "documentation": {
              "id": 3732,
              "nodeType": "StructuredDocumentation",
              "src": "1134:181:21",
              "text": "@notice Remove Minter role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 3749,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3737,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3736,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1368:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1368:14:21"
              }
            ],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3734,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3749,
                  "src": "1342:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:21"
            },
            "returnParameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:21"
            },
            "scope": 3844,
            "src": "1320:124:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3766,
              "nodeType": "Block",
              "src": "1687:58:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3760,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1715:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1715:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1707:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3758,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1707:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3763,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "1730:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3757,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "1697:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3765,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:41:21"
                }
              ]
            },
            "documentation": {
              "id": 3750,
              "nodeType": "StructuredDocumentation",
              "src": "1450:172:21",
              "text": "@notice Add Burner role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 3767,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3755,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3754,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1672:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1672:14:21"
              }
            ],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3752,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3767,
                  "src": "1646:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:17:21"
            },
            "returnParameters": {
              "id": 3756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1687:0:21"
            },
            "scope": 3844,
            "src": "1627:118:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3784,
              "nodeType": "Block",
              "src": "2001:61:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3778,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2032:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2032:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2024:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3776,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2024:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3781,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3770,
                        "src": "2047:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3775,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1600,
                      "src": "2011:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3783,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:44:21"
                }
              ]
            },
            "documentation": {
              "id": 3768,
              "nodeType": "StructuredDocumentation",
              "src": "1751:182:21",
              "text": "@notice Removes Burner role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 3785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3773,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3772,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1986:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1986:14:21"
              }
            ],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3770,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3785,
                  "src": "1960:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1959:17:21"
            },
            "returnParameters": {
              "id": 3774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:21"
            },
            "scope": 3844,
            "src": "1938:124:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3802,
              "nodeType": "Block",
              "src": "2294:59:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3796,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2324:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2324:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2316:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3794,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2316:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:20:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3799,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3788,
                        "src": "2338:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3793,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1521,
                      "src": "2304:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3801,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:42:21"
                }
              ]
            },
            "documentation": {
              "id": 3786,
              "nodeType": "StructuredDocumentation",
              "src": "2068:160:21",
              "text": "@notice Reset Owner role to account.\n@dev The caller must have the Owner role.\n@param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 3803,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3791,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3790,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "2279:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:14:21"
              }
            ],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3788,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3803,
                  "src": "2253:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2252:17:21"
            },
            "returnParameters": {
              "id": 3792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2294:0:21"
            },
            "scope": 3844,
            "src": "2233:120:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3822,
              "nodeType": "Block",
              "src": "2654:65:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3816,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2689:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2689:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2681:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3814,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2681:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2681:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3819,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3806,
                        "src": "2704:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3813,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "2671:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 3820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3812,
                  "id": 3821,
                  "nodeType": "Return",
                  "src": "2664:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3804,
              "nodeType": "StructuredDocumentation",
              "src": "2359:209:21",
              "text": "@notice Checks if a given account holds the Minter role.\n@param account The address which is checked for the Minter role.\n@return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 3823,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3808,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1138,
                  "src": "2620:16:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:18:21"
              }
            ],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3806,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3823,
                  "src": "2591:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2590:17:21"
            },
            "returnParameters": {
              "id": 3812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3811,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3823,
                  "src": "2648:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3810,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:6:21"
            },
            "scope": 3844,
            "src": "2573:146:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3842,
              "nodeType": "Block",
              "src": "3020:65:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3836,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "3055:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3055:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3047:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3834,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3047:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3839,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3826,
                        "src": "3070:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3833,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "3037:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3832,
                  "id": 3841,
                  "nodeType": "Return",
                  "src": "3030:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3824,
              "nodeType": "StructuredDocumentation",
              "src": "2725:209:21",
              "text": "@notice Checks if a given account holds the Burner role.\n@param account The address which is checked for the Burner role.\n@return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 3843,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3829,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3828,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1138,
                  "src": "2986:16:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2986:18:21"
              }
            ],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3826,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "2957:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2956:17:21"
            },
            "returnParameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3831,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "3014:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3013:6:21"
            },
            "scope": 3844,
            "src": "2939:146:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3845,
        "src": "292:2795:21"
      }
    ],
    "src": "0:3088:21"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/financial-templates/common/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [3844]
    },
    "id": 3845,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3688,
        "literals": ["solidity", "^", "0.6", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:21"
      },
      {
        "absolutePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 3689,
        "nodeType": "ImportDirective",
        "scope": 3845,
        "sourceUnit": 402,
        "src": "24:55:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/guillem/Documents/Ethereum/Hedger/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 3690,
        "nodeType": "ImportDirective",
        "scope": 3845,
        "sourceUnit": 1165,
        "src": "80:50:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3692,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 401,
              "src": "319:13:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$401",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 3693,
            "nodeType": "InheritanceSpecifier",
            "src": "319:13:21"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3694,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1164,
              "src": "334:8:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$1164",
                "typeString": "contract Lockable"
              }
            },
            "id": 3695,
            "nodeType": "InheritanceSpecifier",
            "src": "334:8:21"
          }
        ],
        "contractDependencies": [401, 1164, 1772, 2035, 13688, 14573, 14984],
        "contractKind": "contract",
        "documentation": {
          "id": 3691,
          "nodeType": "StructuredDocumentation",
          "src": "133:157:21",
          "text": "@title Burnable and mintable ERC20.\n@dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 3844,
        "linearizedBaseContracts": [3844, 1164, 401, 1772, 14573, 2035, 14984, 13688],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3712,
              "nodeType": "Block",
              "src": "825:2:21",
              "statements": []
            },
            "documentation": {
              "id": 3696,
              "nodeType": "StructuredDocumentation",
              "src": "349:281:21",
              "text": "@notice Constructs the SyntheticToken.\n@param tokenName The name which describes the new token.\n@param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n@param tokenDecimals The number of decimals to define token precision."
            },
            "id": 3713,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3705,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3698,
                    "src": "771:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3706,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3700,
                    "src": "782:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3707,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3702,
                    "src": "795:13:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 3708,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3704,
                  "name": "ExpandedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 401,
                  "src": "757:13:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$401_$",
                    "typeString": "type(contract ExpandedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "757:52:21"
              },
              {
                "arguments": [],
                "id": 3710,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3709,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "810:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:14:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3713,
                  "src": "656:23:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3700,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3713,
                  "src": "689:25:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3699,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3702,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3713,
                  "src": "724:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3701,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "646:103:21"
            },
            "returnParameters": {
              "id": 3711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:0:21"
            },
            "scope": 3844,
            "src": "635:192:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3730,
              "nodeType": "Block",
              "src": "1070:58:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3724,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1098:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1090:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3722,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1090:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3727,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "1113:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3721,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "1080:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:41:21"
                }
              ]
            },
            "documentation": {
              "id": 3714,
              "nodeType": "StructuredDocumentation",
              "src": "833:172:21",
              "text": "@notice Add Minter role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 3731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3719,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3718,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1055:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:21"
              }
            ],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3716,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3731,
                  "src": "1029:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1028:17:21"
            },
            "returnParameters": {
              "id": 3720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:0:21"
            },
            "scope": 3844,
            "src": "1010:118:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3748,
              "nodeType": "Block",
              "src": "1383:61:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3742,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1414:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1414:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1406:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3740,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1406:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3745,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3734,
                        "src": "1429:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3739,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1600,
                      "src": "1393:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3747,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:44:21"
                }
              ]
            },
            "documentation": {
              "id": 3732,
              "nodeType": "StructuredDocumentation",
              "src": "1134:181:21",
              "text": "@notice Remove Minter role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 3749,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3737,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3736,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1368:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1368:14:21"
              }
            ],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3734,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3749,
                  "src": "1342:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1342:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1341:17:21"
            },
            "returnParameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:21"
            },
            "scope": 3844,
            "src": "1320:124:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3766,
              "nodeType": "Block",
              "src": "1687:58:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3760,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1715:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1715:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1707:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3758,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1707:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3763,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "1730:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3757,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "1697:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3765,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:41:21"
                }
              ]
            },
            "documentation": {
              "id": 3750,
              "nodeType": "StructuredDocumentation",
              "src": "1450:172:21",
              "text": "@notice Add Burner role to account.\n@dev The caller must have the Owner role.\n@param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 3767,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3755,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3754,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1672:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1672:14:21"
              }
            ],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3752,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3767,
                  "src": "1646:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1645:17:21"
            },
            "returnParameters": {
              "id": 3756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1687:0:21"
            },
            "scope": 3844,
            "src": "1627:118:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3784,
              "nodeType": "Block",
              "src": "2001:61:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3778,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2032:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2032:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2024:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3776,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2024:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3781,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3770,
                        "src": "2047:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3775,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1600,
                      "src": "2011:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:44:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3783,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:44:21"
                }
              ]
            },
            "documentation": {
              "id": 3768,
              "nodeType": "StructuredDocumentation",
              "src": "1751:182:21",
              "text": "@notice Removes Burner role from account.\n@dev The caller must have the Owner role.\n@param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 3785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3773,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3772,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "1986:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1986:14:21"
              }
            ],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3770,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3785,
                  "src": "1960:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1959:17:21"
            },
            "returnParameters": {
              "id": 3774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:21"
            },
            "scope": 3844,
            "src": "1938:124:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3802,
              "nodeType": "Block",
              "src": "2294:59:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3796,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2324:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2324:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2316:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3794,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2316:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2316:20:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3799,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3788,
                        "src": "2338:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3793,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1521,
                      "src": "2304:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2304:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3801,
                  "nodeType": "ExpressionStatement",
                  "src": "2304:42:21"
                }
              ]
            },
            "documentation": {
              "id": 3786,
              "nodeType": "StructuredDocumentation",
              "src": "2068:160:21",
              "text": "@notice Reset Owner role to account.\n@dev The caller must have the Owner role.\n@param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 3803,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3791,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3790,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1130,
                  "src": "2279:12:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2279:14:21"
              }
            ],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3788,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3803,
                  "src": "2253:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2252:17:21"
            },
            "returnParameters": {
              "id": 3792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2294:0:21"
            },
            "scope": 3844,
            "src": "2233:120:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3822,
              "nodeType": "Block",
              "src": "2654:65:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3816,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2689:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2689:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2681:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3814,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2681:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2681:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3819,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3806,
                        "src": "2704:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3813,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "2671:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 3820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3812,
                  "id": 3821,
                  "nodeType": "Return",
                  "src": "2664:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3804,
              "nodeType": "StructuredDocumentation",
              "src": "2359:209:21",
              "text": "@notice Checks if a given account holds the Minter role.\n@param account The address which is checked for the Minter role.\n@return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 3823,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3808,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1138,
                  "src": "2620:16:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2620:18:21"
              }
            ],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3806,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3823,
                  "src": "2591:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2591:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2590:17:21"
            },
            "returnParameters": {
              "id": 3812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3811,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3823,
                  "src": "2648:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3810,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2647:6:21"
            },
            "scope": 3844,
            "src": "2573:146:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3842,
              "nodeType": "Block",
              "src": "3020:65:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3836,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "3055:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 3837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3055:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 3835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3047:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3834,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3047:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3047:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3839,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3826,
                        "src": "3070:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3833,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "3037:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 3840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:41:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3832,
                  "id": 3841,
                  "nodeType": "Return",
                  "src": "3030:48:21"
                }
              ]
            },
            "documentation": {
              "id": 3824,
              "nodeType": "StructuredDocumentation",
              "src": "2725:209:21",
              "text": "@notice Checks if a given account holds the Burner role.\n@param account The address which is checked for the Burner role.\n@return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 3843,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3829,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3828,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1138,
                  "src": "2986:16:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2986:18:21"
              }
            ],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3826,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "2957:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2956:17:21"
            },
            "returnParameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3831,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3843,
                  "src": "3014:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3014:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3013:6:21"
            },
            "scope": 3844,
            "src": "2939:146:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3845,
        "src": "292:2795:21"
      }
    ],
    "src": "0:3088:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-19T13:24:12.484Z",
  "devdoc": {
    "details": "The contract deployer will initially be the only minter, burner and owner capable of adding new roles.",
    "methods": {
      "addBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Burner role is added."
        }
      },
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "addMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Minter role is added."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `value` tokens owned by `msg.sender`.",
        "params": {
          "value": "amount of tokens to burn."
        }
      },
      "constructor": {
        "params": {
          "tokenDecimals": "The number of decimals to define token precision.",
          "tokenName": "The name which describes the new token.",
          "tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "isBurner(address)": {
        "params": {
          "account": "The address which is checked for the Burner role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Burner."
        }
      },
      "isMinter(address)": {
        "params": {
          "account": "The address which is checked for the Minter role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Minter."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints `value` tokens to `recipient`, returning true on success.",
        "params": {
          "recipient": "address to mint to.",
          "value": "amount of tokens to mint."
        },
        "returns": {
          "_0": "True if the mint succeeded, or False."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Burner role is removed."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "removeMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Minter role is removed."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "resetOwner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The new holder of the Owner role."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "Burnable and mintable ERC20."
  },
  "userdoc": {
    "methods": {
      "addBurner(address)": {
        "notice": "Add Burner role to account."
      },
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "addMinter(address)": {
        "notice": "Add Minter role to account."
      },
      "constructor": "Constructs the SyntheticToken.",
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "isBurner(address)": {
        "notice": "Checks if a given account holds the Burner role."
      },
      "isMinter(address)": {
        "notice": "Checks if a given account holds the Minter role."
      },
      "removeBurner(address)": {
        "notice": "Removes Burner role from account."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "removeMinter(address)": {
        "notice": "Remove Minter role from account."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "resetOwner(address)": {
        "notice": "Reset Owner role to account."
      }
    }
  }
}
