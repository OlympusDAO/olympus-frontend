{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gohm_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staking_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sdai_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "coolerFactory_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "kernel_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadEscrow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DurationMaximum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller_",
          "type": "address"
        }
      ],
      "name": "KernelAdapter_OnlyKernel",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthDiscrepancy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBurnable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyFromFactory",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Keycode",
          "name": "keycode_",
          "type": "bytes5"
        }
      ],
      "name": "Policy_ModuleDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooEarlyToFund",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUND_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FUND_CADENCE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INTEREST_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOAN_TO_COLLATERAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTR",
      "outputs": [
        {
          "internalType": "contract MINTRv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLES",
      "outputs": [
        {
          "internalType": "contract ROLESv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRSRY",
      "outputs": [
        {
          "internalType": "contract TRSRYv1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Kernel",
          "name": "newKernel_",
          "type": "address"
        }
      ],
      "name": "changeKernel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "coolers_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "loans_",
          "type": "uint256[]"
        }
      ],
      "name": "claimDefaulted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "configureDependencies",
      "outputs": [
        {
          "internalType": "Keycode[]",
          "name": "dependencies",
          "type": "bytes5[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateral_",
          "type": "uint256"
        }
      ],
      "name": "debtForCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "defund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract CoolerFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gOHM",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "debt_",
          "type": "uint256"
        }
      ],
      "name": "interestFromDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCoolerCallback",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kernel",
      "outputs": [
        {
          "internalType": "contract Kernel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Cooler",
          "name": "cooler_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "lendToCooler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "debt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "name": "onDefault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "onRepay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newCollateral",
          "type": "uint256"
        }
      ],
      "name": "onRoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receivables",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestPermissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Keycode",
              "name": "keycode",
              "type": "bytes5"
            },
            {
              "internalType": "bytes4",
              "name": "funcSelector",
              "type": "bytes4"
            }
          ],
          "internalType": "struct Permissions[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Cooler",
          "name": "cooler_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID_",
          "type": "uint256"
        }
      ],
      "name": "rollLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sDai",
      "outputs": [
        {
          "internalType": "contract ERC4626",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sweepIntoDSR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "devdoc": {
    "kind": "dev",
    "methods": {
      "claimDefaulted(address[],uint256[])": {
        "params": {
          "coolers_": "Contracts where the default must be claimed.",
          "loans_": "IDs of the defaulted loans."
        }
      },
      "debtForCollateral(uint256)": {
        "params": {
          "collateral_": "amount of gOHM."
        }
      },
      "defund(address,uint256)": {
        "params": {
          "amount_": "to transfer.",
          "token_": "to transfer."
        }
      },
      "interestFromDebt(uint256)": {
        "params": {
          "debt_": "amount of gOHM."
        }
      },
      "lendToCooler(address,uint256)": {
        "params": {
          "cooler_": "to lend to.",
          "amount_": "of DAI to lend."
        },
        "returns": {
          "_0": "the ID of the new loan."
        }
      },
      "rollLoan(address,uint256)": {
        "params": {
          "cooler_": "to provide terms.",
          "loanID_": "of loan in cooler."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeKernel(address)": {
        "notice": "Function used by kernel when migrating to a new kernel."
      },
      "claimDefaulted(address[],uint256[])": {
        "notice": "Batch several default claims to save gas.         The elements on both arrays must be paired based on their index."
      },
      "configureDependencies()": {
        "notice": "Default framework setup."
      },
      "debtForCollateral(uint256)": {
        "notice": "view function to compute the total debt for a given collateral amount."
      },
      "defund(address,uint256)": {
        "notice": "Return funds to treasury."
      },
      "interestFromDebt(uint256)": {
        "notice": "view function to compute the interest for a given debt amount."
      },
      "isActive()": {
        "notice": "Easily accessible indicator for if a policy is activated or not."
      },
      "isCoolerCallback()": {
        "notice": "Informs to Cooler that this contract can handle its callbacks."
      },
      "lendToCooler(address,uint256)": {
        "notice": "Lend to a cooler."
      },
      "onDefault(uint256,uint256,uint256)": {
        "notice": "Callback function that handles defaults."
      },
      "onRepay(uint256,uint256)": {
        "notice": "Callback function that handles repayments."
      },
      "onRoll(uint256,uint256,uint256)": {
        "notice": "Callback function that handles rollovers."
      },
      "rebalance()": {
        "notice": "Fund loan liquidity from treasury. Returns false if too early to rebalance.         Exposure is always capped at FUND_AMOUNT and rebalanced at up to FUND_CADANCE.         If several rebalances are available (because some were missed), calling this         function several times won't impact the funds controlled by the contract."
      },
      "requestPermissions()": {
        "notice": "Default framework setup."
      },
      "rollLoan(address,uint256)": {
        "notice": "Provide terms for loan and execute the rollover."
      },
      "sweepIntoDSR()": {
        "notice": "Sweep excess DAI into vault."
      }
    },
    "version": 1
  }
}
