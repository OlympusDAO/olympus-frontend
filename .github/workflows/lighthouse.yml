name: Lighthouse PWA Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  lighthouse-local:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build PWA distribution for production
      run: |
          yarn install --frozen-lockfile
          yarn build
      env:
          CI: true
    - name: Run Lighthouse PWA check against local production build
      uses: treosh/lighthouse-ci-action@v8
      with:
          # no urls needed, since it uses local folder to scan .html files
          # budgetPath: '.github/lighthouse/budget.json' # uncommment if we want custom performance budgets
          configPath: '.github/lighthouse/lighthouserc-static-dist-dir.yml'
          uploadArtifacts: true # save results as github action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

  lighthouse-test-deploy:
    runs-on: ubuntu-latest
    name: Run Lighthouse against a test deployment.
    steps:
    - uses: actions/checkout@v2
    - uses: SFDigitalServices/wait-for-deployment-action@v1
      id: deployment
      with:
        token: ${{ github.token }}
        environment: Preview
    - name: Get the output url
      run: |
        echo "Fleek test deploy url is ${{ steps.deploy.outputs.deployUrl }}"
        echo "Deployed to: ${{ steps.deployment.outputs.url }}"
#    - name: Deploy test site
#      id: deploy
#      uses: fleekhq/action-deploy@v1
#      with:
#        apiKey: ${{ secrets.FLEEK_API_KEY }}
#    - name: Get the output url
#      run: echo "Fleek test deploy url is ${{ steps.deploy.outputs.deployUrl }}"
    - name: Run Lighthouse PWA check against Netlify PR Preview
      uses: treosh/lighthouse-ci-action@v8
      with:
        urls: |
          ${{ steps.deploy.outputs.deployUrl }}
        uploadArtifacts: true # save results as an action artifacts
        temporaryPublicStorage: true # upload lighthouse report to the temporary storage
        # budgetPath: '.github/lighthouse/budget.json' # performance budgets
        configPath: '.github/lighthouse/lighthouserc-test-deploy.json' # PWA checks
    - name: Run Lighthouse PWA sanity check against the existing Fleek production deployment
      uses: treosh/lighthouse-ci-action@v8
      with:
        urls: |
          https://app.olympusdao.finance/
        uploadArtifacts: true # save results as an action artifacts
        temporaryPublicStorage: true # upload lighthouse report to the temporary storage
        # budgetPath: '.github/lighthouse/budget.json' # performance budgets
        configPath: '.github/lighthouse/lighthouserc-prod-deploy.json' # PWA checks
