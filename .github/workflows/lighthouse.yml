name: Lighthouse PWA Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

#
jobs:
  lighthouse-local-static-pages:
    runs-on: ubuntu-latest
    name: Run lighthouse check against static files
    steps:
    - uses: actions/checkout@v2
    - name: Build PWA distribution for production
      run: |
          yarn install --frozen-lockfile
          yarn build
      env:
          CI: false
    - name: Run Lighthouse PWA check against local production build
      uses: treosh/lighthouse-ci-action@v8
      with:
          # no urls needed, since it uses local folder to scan .html files
          # budgetPath: '.github/lighthouse/budget.json' # uncommment if we want custom performance budgets
          configPath: '.github/lighthouse/lighthouserc-static-dist-dir.yml'
          uploadArtifacts: true # save results as github action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

  lighthouse-local-deploy:
    runs-on: ubuntu-latest
    name: Run Lighthouse against a local test deployment.
    steps:
    - uses: actions/checkout@v2
#    - name: Deploy test site
#      id: deploy
#      uses: fleekhq/action-deploy@v1
#      with:
#        apiKey: ${{ secrets.FLEEK_API_KEY }}
#    - name: Get the output url
#      run: echo "Fleek test deploy url is ${{ steps.deploy.outputs.deployUrl }}"
    - name: Run Lighthouse PWA check against Fleek test site deployment
      uses: treosh/lighthouse-ci-action@v8
      with:
        urls: |
          http://localhost:3000
#         ${{ steps.deploy.outputs.deployUrl }}
        uploadArtifacts: true # save results as an action artifacts
        temporaryPublicStorage: true # upload lighthouse report to the temporary storage
       # budgetPath: '.github/lighthouse/budget.json' # performance budgets
        configPath: '.github/lighthouse/lighthouserc-test-deploy.json' # PWA checks

  lighthouse-prod-deploy:
    runs-on: ubuntu-latest
    name: Run Lighthouse against prod deployment.
    steps:
    - uses: actions/checkout@v2
    - name: Run Lighthouse PWA sanity check against the existing Fleek production deployment
      uses: treosh/lighthouse-ci-action@v8
      with:
        urls: |
          https://app.olympusdao.finance/
        uploadArtifacts: true # save results as an action artifacts
        temporaryPublicStorage: true # upload lighthouse report to the temporary storage
        # budgetPath: '.github/lighthouse/budget.json' # performance budgets
        configPath: '.github/lighthouse/lighthouserc-prod-deploy.json' # PWA checks
